//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EMS
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EMSEntities : DbContext
    {
        public EMSEntities()
            : base("name=EMSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BP> BPs { get; set; }
        public virtual DbSet<CLASS> CLASSes { get; set; }
        public virtual DbSet<CLFEEDTL> CLFEEDTLs { get; set; }
        public virtual DbSet<CLFEEMST> CLFEEMSTs { get; set; }
        public virtual DbSet<COUTLINE> COUTLINEs { get; set; }
        public virtual DbSet<CST> CSTs { get; set; }
        public virtual DbSet<CTTDTL> CTTDTLs { get; set; }
        public virtual DbSet<CTTMST> CTTMSTs { get; set; }
        public virtual DbSet<DEPT> DEPTs { get; set; }
        public virtual DbSet<EDUCATION> EDUCATIONs { get; set; }
        public virtual DbSet<EM> EMs { get; set; }
        public virtual DbSet<EMDTL> EMDTLs { get; set; }
        public virtual DbSet<EMDTL1> EMDTL1 { get; set; }
        public virtual DbSet<EMDTL2> EMDTL2 { get; set; }
        public virtual DbSet<EXAM> EXAMs { get; set; }
        public virtual DbSet<FEECOLLECTDTL> FEECOLLECTDTLs { get; set; }
        public virtual DbSet<FEECOLLECTMST> FEECOLLECTMSTs { get; set; }
        public virtual DbSet<FEETYPE> FEETYPES { get; set; }
        public virtual DbSet<FISCAL_YEAR> FISCAL_YEAR { get; set; }
        public virtual DbSet<GRPCHANGE> GRPCHANGEs { get; set; }
        public virtual DbSet<GRPMST> GRPMSTs { get; set; }
        public virtual DbSet<LEAVECAL> LEAVECALs { get; set; }
        public virtual DbSet<LEAVECERTMST> LEAVECERTMSTs { get; set; }
        public virtual DbSet<LEAVETYPE> LEAVETYPEs { get; set; }
        public virtual DbSet<LSCHOOLDTL> LSCHOOLDTLs { get; set; }
        public virtual DbSet<LSCHOOLMST> LSCHOOLMSTs { get; set; }
        public virtual DbSet<MARKSDTL> MARKSDTLs { get; set; }
        public virtual DbSet<MARKSDTL1> MARKSDTL1 { get; set; }
        public virtual DbSet<MARKSMST> MARKSMSTs { get; set; }
        public virtual DbSet<MARKSMSTOLD> MARKSMSTOLDs { get; set; }
        public virtual DbSet<MARKTOTAL> MARKTOTALs { get; set; }
        public virtual DbSet<MARKTOTALDTL> MARKTOTALDTLs { get; set; }
        public virtual DbSet<MODULE> MODULES { get; set; }
        public virtual DbSet<OBJECTMST> OBJECTMSTs { get; set; }
        public virtual DbSet<PROMDTL> PROMDTLs { get; set; }
        public virtual DbSet<PROMMST> PROMMSTs { get; set; }
        public virtual DbSet<SECCHANGE> SECCHANGEs { get; set; }
        public virtual DbSet<SECDTL> SECDTLs { get; set; }
        public virtual DbSet<SECMST> SECMSTs { get; set; }
        public virtual DbSet<SPFEEDTL> SPFEEDTLs { get; set; }
        public virtual DbSet<SPFEEMST> SPFEEMSTs { get; set; }
        public virtual DbSet<STIME> STIMEs { get; set; }
        public virtual DbSet<STIMEDTL> STIMEDTLs { get; set; }
        public virtual DbSet<SUBDEPT> SUBDEPTs { get; set; }
        public virtual DbSet<SUBJECT> SUBJECTs { get; set; }
        public virtual DbSet<TMST> TMSTs { get; set; }
        public virtual DbSet<CIO> CIOs { get; set; }
        public virtual DbSet<GRPDTL> GRPDTLs { get; set; }
        public virtual DbSet<COMPANY> COMPANies { get; set; }
        public virtual DbSet<COMPANYDTL> COMPANYDTLs { get; set; }
        public virtual DbSet<USER> USERS { get; set; }
    
        public virtual int ALLCLASSVOUCHERS(Nullable<System.DateTime> pRDATE, Nullable<double> pTRNNO, Nullable<System.DateTime> pDDATE, Nullable<double> pFMONTH, Nullable<System.DateTime> pLDATE)
        {
            var pRDATEParameter = pRDATE.HasValue ?
                new ObjectParameter("PRDATE", pRDATE) :
                new ObjectParameter("PRDATE", typeof(System.DateTime));
    
            var pTRNNOParameter = pTRNNO.HasValue ?
                new ObjectParameter("PTRNNO", pTRNNO) :
                new ObjectParameter("PTRNNO", typeof(double));
    
            var pDDATEParameter = pDDATE.HasValue ?
                new ObjectParameter("PDDATE", pDDATE) :
                new ObjectParameter("PDDATE", typeof(System.DateTime));
    
            var pFMONTHParameter = pFMONTH.HasValue ?
                new ObjectParameter("PFMONTH", pFMONTH) :
                new ObjectParameter("PFMONTH", typeof(double));
    
            var pLDATEParameter = pLDATE.HasValue ?
                new ObjectParameter("PLDATE", pLDATE) :
                new ObjectParameter("PLDATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ALLCLASSVOUCHERS", pRDATEParameter, pTRNNOParameter, pDDATEParameter, pFMONTHParameter, pLDATEParameter);
        }
    
        public virtual int SPECIFICCLASSVOUCHERS(Nullable<System.DateTime> pRDATE, Nullable<double> pTRNNO, Nullable<System.DateTime> pDDATE, Nullable<double> pFMONTH, Nullable<double> pEMTRNNO, Nullable<System.DateTime> pLDATE)
        {
            var pRDATEParameter = pRDATE.HasValue ?
                new ObjectParameter("PRDATE", pRDATE) :
                new ObjectParameter("PRDATE", typeof(System.DateTime));
    
            var pTRNNOParameter = pTRNNO.HasValue ?
                new ObjectParameter("PTRNNO", pTRNNO) :
                new ObjectParameter("PTRNNO", typeof(double));
    
            var pDDATEParameter = pDDATE.HasValue ?
                new ObjectParameter("PDDATE", pDDATE) :
                new ObjectParameter("PDDATE", typeof(System.DateTime));
    
            var pFMONTHParameter = pFMONTH.HasValue ?
                new ObjectParameter("PFMONTH", pFMONTH) :
                new ObjectParameter("PFMONTH", typeof(double));
    
            var pEMTRNNOParameter = pEMTRNNO.HasValue ?
                new ObjectParameter("PEMTRNNO", pEMTRNNO) :
                new ObjectParameter("PEMTRNNO", typeof(double));
    
            var pLDATEParameter = pLDATE.HasValue ?
                new ObjectParameter("PLDATE", pLDATE) :
                new ObjectParameter("PLDATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPECIFICCLASSVOUCHERS", pRDATEParameter, pTRNNOParameter, pDDATEParameter, pFMONTHParameter, pEMTRNNOParameter, pLDATEParameter);
        }
    }
}
